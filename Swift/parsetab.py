
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'AA2D18A5D98420B68CEC476B2838AF6E'
    
_lr_action_items = {'PRINT':([0,],[1,]),'EQUALS':([22,],[35,]),'$end':([0,2,3,4,5,6,7,8,10,11,12,13,15,21,26,27,28,29,30,31,32,33,34,36,37,38,39,40,],[-27,-9,0,-4,-11,-20,-10,-8,-5,-1,-2,-3,-7,-6,-23,-15,-14,-19,-18,-17,-16,-12,-13,-26,-25,-24,-22,-21,]),'LPAREN':([1,],[16,]),'TEXT':([14,16,],[22,25,]),'CLSTRING':([16,35,],[26,26,]),'RPAREN':([2,5,7,8,15,23,24,25,26,27,28,29,30,31,32,33,34,],[-9,-11,-10,-8,-7,36,37,38,-23,-15,-14,-19,-18,-17,-16,-12,-13,]),'MINUS':([9,28,],[17,17,]),'DIV':([9,30,],[18,18,]),'MULT':([9,32,],[19,19,]),'LET':([0,],[14,]),'INTEGER':([0,2,5,7,8,10,11,15,16,17,18,19,20,21,27,28,29,30,31,32,33,34,35,],[9,-9,-11,-10,-8,-5,9,-7,9,28,30,32,33,-6,-15,-14,-19,-18,-17,-16,-12,-13,40,]),'PLUS':([9,33,],[20,20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,11,16,],[10,21,23,]),'string':([16,35,],[24,39,]),'subtraction':([0,11,16,17,],[2,2,2,27,]),'program':([0,],[3,]),'expressions':([0,],[11,]),'declaration':([0,],[12,]),'empty':([0,],[4,]),'division':([0,11,16,18,],[5,5,5,29,]),'print':([0,],[13,]),'let':([0,],[6,]),'multiplication':([0,11,16,19,],[7,7,7,31,]),'operation':([0,11,16,],[15,15,15,]),'addition':([0,11,16,20,],[8,8,8,34,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> expressions','program',1,'p_program','yacc.py',20),
  ('program -> declaration','program',1,'p_program','yacc.py',21),
  ('program -> print','program',1,'p_program','yacc.py',22),
  ('program -> empty','program',1,'p_program','yacc.py',23),
  ('expressions -> expression','expressions',1,'p_expressions','yacc.py',28),
  ('expressions -> expressions expression','expressions',2,'p_expressions','yacc.py',29),
  ('expression -> operation','expression',1,'p_expression','yacc.py',33),
  ('operation -> addition','operation',1,'p_operation','yacc.py',41),
  ('operation -> subtraction','operation',1,'p_operation','yacc.py',42),
  ('operation -> multiplication','operation',1,'p_operation','yacc.py',43),
  ('operation -> division','operation',1,'p_operation','yacc.py',44),
  ('addition -> INTEGER PLUS INTEGER','addition',3,'p_addition','yacc.py',48),
  ('addition -> INTEGER PLUS addition','addition',3,'p_addition','yacc.py',49),
  ('subtraction -> INTEGER MINUS INTEGER','subtraction',3,'p_subtraction','yacc.py',53),
  ('subtraction -> INTEGER MINUS subtraction','subtraction',3,'p_subtraction','yacc.py',54),
  ('multiplication -> INTEGER MULT INTEGER','multiplication',3,'p_multiplication','yacc.py',58),
  ('multiplication -> INTEGER MULT multiplication','multiplication',3,'p_multiplication','yacc.py',59),
  ('division -> INTEGER DIV INTEGER','division',3,'p_division','yacc.py',63),
  ('division -> INTEGER DIV division','division',3,'p_division','yacc.py',64),
  ('declaration -> let','declaration',1,'p_declaration','yacc.py',72),
  ('let -> LET TEXT EQUALS INTEGER','let',4,'p_let','yacc.py',76),
  ('let -> LET TEXT EQUALS string','let',4,'p_let','yacc.py',77),
  ('string -> CLSTRING','string',1,'p_string','yacc.py',86),
  ('print -> PRINT LPAREN TEXT RPAREN','print',4,'p_print','yacc.py',100),
  ('print -> PRINT LPAREN string RPAREN','print',4,'p_print','yacc.py',101),
  ('print -> PRINT LPAREN expression RPAREN','print',4,'p_print','yacc.py',102),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',109),
]
