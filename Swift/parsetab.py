
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'FF01CC3FC0E1D0CA48C7B1F2245AE941'
    
_lr_action_items = {'EQUALS':([17,],[22,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,12,13,15,16,23,24,25,26,27,28,29,30,31,],[-23,-5,-3,-9,-22,0,-1,-2,-4,-11,-20,-10,-7,-8,-6,-15,-14,-19,-18,-17,-16,-12,-13,-21,]),'CLSTRING':([0,],[4,]),'TEXT':([11,],[17,]),'MINUS':([14,24,],[18,18,]),'DIV':([14,26,],[19,19,]),'MULT':([14,28,],[20,20,]),'LET':([0,],[11,]),'INTEGER':([0,1,3,6,9,12,13,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,],[14,-5,-9,14,-11,-10,-7,-8,-6,24,26,28,29,31,-15,-14,-19,-18,-17,-16,-12,-13,]),'PLUS':([14,29,],[21,21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,6,],[1,16,]),'string':([0,],[2,]),'subtraction':([0,6,18,],[3,3,23,]),'program':([0,],[5,]),'expressions':([0,],[6,]),'declaration':([0,],[7,]),'empty':([0,],[8,]),'division':([0,6,19,],[9,9,25,]),'let':([0,],[10,]),'multiplication':([0,6,20,],[12,12,27,]),'operation':([0,6,],[13,13,]),'addition':([0,6,21,],[15,15,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> expressions','program',1,'p_program','yacc.py',19),
  ('program -> declaration','program',1,'p_program','yacc.py',20),
  ('program -> string','program',1,'p_program','yacc.py',21),
  ('program -> empty','program',1,'p_program','yacc.py',22),
  ('expressions -> expression','expressions',1,'p_expressions','yacc.py',27),
  ('expressions -> expressions expression','expressions',2,'p_expressions','yacc.py',28),
  ('expression -> operation','expression',1,'p_expression','yacc.py',32),
  ('operation -> addition','operation',1,'p_operation','yacc.py',38),
  ('operation -> subtraction','operation',1,'p_operation','yacc.py',39),
  ('operation -> multiplication','operation',1,'p_operation','yacc.py',40),
  ('operation -> division','operation',1,'p_operation','yacc.py',41),
  ('addition -> INTEGER PLUS INTEGER','addition',3,'p_addition','yacc.py',45),
  ('addition -> INTEGER PLUS addition','addition',3,'p_addition','yacc.py',46),
  ('subtraction -> INTEGER MINUS INTEGER','subtraction',3,'p_subtraction','yacc.py',50),
  ('subtraction -> INTEGER MINUS subtraction','subtraction',3,'p_subtraction','yacc.py',51),
  ('multiplication -> INTEGER MULT INTEGER','multiplication',3,'p_multiplication','yacc.py',55),
  ('multiplication -> INTEGER MULT multiplication','multiplication',3,'p_multiplication','yacc.py',56),
  ('division -> INTEGER DIV INTEGER','division',3,'p_division','yacc.py',60),
  ('division -> INTEGER DIV division','division',3,'p_division','yacc.py',61),
  ('declaration -> let','declaration',1,'p_declaration','yacc.py',69),
  ('let -> LET TEXT EQUALS INTEGER','let',4,'p_let','yacc.py',73),
  ('string -> CLSTRING','string',1,'p_string','yacc.py',81),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',87),
]
