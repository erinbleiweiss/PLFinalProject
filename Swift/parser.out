Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    QUOTE
    TRUE
    NIL
    SQUOTE
    FALSE

Grammar

Rule 0     S' -> program
Rule 1     program -> expressions
Rule 2     program -> declaration
Rule 3     program -> print
Rule 4     program -> empty
Rule 5     expressions -> expression
Rule 6     expressions -> expressions expression
Rule 7     expression -> operation
Rule 8     operation -> addition
Rule 9     operation -> subtraction
Rule 10    operation -> multiplication
Rule 11    operation -> division
Rule 12    addition -> operable PLUS operable
Rule 13    addition -> operable PLUS addition
Rule 14    subtraction -> operable MINUS operable
Rule 15    subtraction -> operable MINUS subtraction
Rule 16    multiplication -> operable MULT operable
Rule 17    multiplication -> operable MULT multiplication
Rule 18    division -> operable DIV operable
Rule 19    division -> operable DIV division
Rule 20    operable -> INTEGER
Rule 21    operable -> CLFLOAT
Rule 22    operable -> TEXT
Rule 23    declaration -> let
Rule 24    let -> LET TEXT EQUALS INTEGER
Rule 25    let -> LET TEXT EQUALS string
Rule 26    string -> CLSTRING
Rule 27    string -> string expression string
Rule 28    print -> PRINT LPAREN TEXT RPAREN
Rule 29    print -> PRINT LPAREN string RPAREN
Rule 30    print -> PRINT LPAREN expressions RPAREN
Rule 31    empty -> <empty>

Terminals, with rules where they appear

CLFLOAT              : 21
CLSTRING             : 26
DIV                  : 18 19
EQUALS               : 24 25
FALSE                : 
INTEGER              : 20 24
LET                  : 24 25
LPAREN               : 28 29 30
MINUS                : 14 15
MULT                 : 16 17
NIL                  : 
PLUS                 : 12 13
PRINT                : 28 29 30
QUOTE                : 
RPAREN               : 28 29 30
SQUOTE               : 
TEXT                 : 22 24 25 28
TRUE                 : 
error                : 

Nonterminals, with rules where they appear

addition             : 8 13
declaration          : 2
division             : 11 19
empty                : 4
expression           : 5 6 27
expressions          : 1 6 30
let                  : 23
multiplication       : 10 17
operable             : 12 12 13 14 14 15 16 16 17 18 18 19
operation            : 7
print                : 3
program              : 0
string               : 25 27 27 29
subtraction          : 9 15

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . expressions
    (2) program -> . declaration
    (3) program -> . print
    (4) program -> . empty
    (5) expressions -> . expression
    (6) expressions -> . expressions expression
    (23) declaration -> . let
    (28) print -> . PRINT LPAREN TEXT RPAREN
    (29) print -> . PRINT LPAREN string RPAREN
    (30) print -> . PRINT LPAREN expressions RPAREN
    (31) empty -> .
    (7) expression -> . operation
    (24) let -> . LET TEXT EQUALS INTEGER
    (25) let -> . LET TEXT EQUALS string
    (8) operation -> . addition
    (9) operation -> . subtraction
    (10) operation -> . multiplication
    (11) operation -> . division
    (12) addition -> . operable PLUS operable
    (13) addition -> . operable PLUS addition
    (14) subtraction -> . operable MINUS operable
    (15) subtraction -> . operable MINUS subtraction
    (16) multiplication -> . operable MULT operable
    (17) multiplication -> . operable MULT multiplication
    (18) division -> . operable DIV operable
    (19) division -> . operable DIV division
    (20) operable -> . INTEGER
    (21) operable -> . CLFLOAT
    (22) operable -> . TEXT

    PRINT           shift and go to state 1
    $end            reduce using rule 31 (empty -> .)
    LET             shift and go to state 17
    INTEGER         shift and go to state 12
    CLFLOAT         shift and go to state 10
    TEXT            shift and go to state 4

    operable                       shift and go to state 2
    expression                     shift and go to state 13
    subtraction                    shift and go to state 3
    program                        shift and go to state 5
    expressions                    shift and go to state 14
    declaration                    shift and go to state 15
    empty                          shift and go to state 6
    division                       shift and go to state 7
    print                          shift and go to state 16
    let                            shift and go to state 8
    multiplication                 shift and go to state 9
    operation                      shift and go to state 18
    addition                       shift and go to state 11

state 1

    (28) print -> PRINT . LPAREN TEXT RPAREN
    (29) print -> PRINT . LPAREN string RPAREN
    (30) print -> PRINT . LPAREN expressions RPAREN

    LPAREN          shift and go to state 19


state 2

    (12) addition -> operable . PLUS operable
    (13) addition -> operable . PLUS addition
    (14) subtraction -> operable . MINUS operable
    (15) subtraction -> operable . MINUS subtraction
    (16) multiplication -> operable . MULT operable
    (17) multiplication -> operable . MULT multiplication
    (18) division -> operable . DIV operable
    (19) division -> operable . DIV division

    PLUS            shift and go to state 23
    MINUS           shift and go to state 20
    MULT            shift and go to state 22
    DIV             shift and go to state 21


state 3

    (9) operation -> subtraction .

    INTEGER         reduce using rule 9 (operation -> subtraction .)
    CLFLOAT         reduce using rule 9 (operation -> subtraction .)
    TEXT            reduce using rule 9 (operation -> subtraction .)
    $end            reduce using rule 9 (operation -> subtraction .)
    RPAREN          reduce using rule 9 (operation -> subtraction .)
    CLSTRING        reduce using rule 9 (operation -> subtraction .)


state 4

    (22) operable -> TEXT .

    PLUS            reduce using rule 22 (operable -> TEXT .)
    MINUS           reduce using rule 22 (operable -> TEXT .)
    MULT            reduce using rule 22 (operable -> TEXT .)
    DIV             reduce using rule 22 (operable -> TEXT .)
    INTEGER         reduce using rule 22 (operable -> TEXT .)
    CLFLOAT         reduce using rule 22 (operable -> TEXT .)
    TEXT            reduce using rule 22 (operable -> TEXT .)
    $end            reduce using rule 22 (operable -> TEXT .)
    RPAREN          reduce using rule 22 (operable -> TEXT .)
    CLSTRING        reduce using rule 22 (operable -> TEXT .)


state 5

    (0) S' -> program .



state 6

    (4) program -> empty .

    $end            reduce using rule 4 (program -> empty .)


state 7

    (11) operation -> division .

    INTEGER         reduce using rule 11 (operation -> division .)
    CLFLOAT         reduce using rule 11 (operation -> division .)
    TEXT            reduce using rule 11 (operation -> division .)
    $end            reduce using rule 11 (operation -> division .)
    RPAREN          reduce using rule 11 (operation -> division .)
    CLSTRING        reduce using rule 11 (operation -> division .)


state 8

    (23) declaration -> let .

    $end            reduce using rule 23 (declaration -> let .)


state 9

    (10) operation -> multiplication .

    INTEGER         reduce using rule 10 (operation -> multiplication .)
    CLFLOAT         reduce using rule 10 (operation -> multiplication .)
    TEXT            reduce using rule 10 (operation -> multiplication .)
    $end            reduce using rule 10 (operation -> multiplication .)
    RPAREN          reduce using rule 10 (operation -> multiplication .)
    CLSTRING        reduce using rule 10 (operation -> multiplication .)


state 10

    (21) operable -> CLFLOAT .

    PLUS            reduce using rule 21 (operable -> CLFLOAT .)
    MINUS           reduce using rule 21 (operable -> CLFLOAT .)
    MULT            reduce using rule 21 (operable -> CLFLOAT .)
    DIV             reduce using rule 21 (operable -> CLFLOAT .)
    INTEGER         reduce using rule 21 (operable -> CLFLOAT .)
    CLFLOAT         reduce using rule 21 (operable -> CLFLOAT .)
    TEXT            reduce using rule 21 (operable -> CLFLOAT .)
    $end            reduce using rule 21 (operable -> CLFLOAT .)
    RPAREN          reduce using rule 21 (operable -> CLFLOAT .)
    CLSTRING        reduce using rule 21 (operable -> CLFLOAT .)


state 11

    (8) operation -> addition .

    INTEGER         reduce using rule 8 (operation -> addition .)
    CLFLOAT         reduce using rule 8 (operation -> addition .)
    TEXT            reduce using rule 8 (operation -> addition .)
    $end            reduce using rule 8 (operation -> addition .)
    RPAREN          reduce using rule 8 (operation -> addition .)
    CLSTRING        reduce using rule 8 (operation -> addition .)


state 12

    (20) operable -> INTEGER .

    PLUS            reduce using rule 20 (operable -> INTEGER .)
    MINUS           reduce using rule 20 (operable -> INTEGER .)
    MULT            reduce using rule 20 (operable -> INTEGER .)
    DIV             reduce using rule 20 (operable -> INTEGER .)
    INTEGER         reduce using rule 20 (operable -> INTEGER .)
    CLFLOAT         reduce using rule 20 (operable -> INTEGER .)
    TEXT            reduce using rule 20 (operable -> INTEGER .)
    $end            reduce using rule 20 (operable -> INTEGER .)
    RPAREN          reduce using rule 20 (operable -> INTEGER .)
    CLSTRING        reduce using rule 20 (operable -> INTEGER .)


state 13

    (5) expressions -> expression .

    RPAREN          reduce using rule 5 (expressions -> expression .)
    INTEGER         reduce using rule 5 (expressions -> expression .)
    CLFLOAT         reduce using rule 5 (expressions -> expression .)
    TEXT            reduce using rule 5 (expressions -> expression .)
    $end            reduce using rule 5 (expressions -> expression .)


state 14

    (1) program -> expressions .
    (6) expressions -> expressions . expression
    (7) expression -> . operation
    (8) operation -> . addition
    (9) operation -> . subtraction
    (10) operation -> . multiplication
    (11) operation -> . division
    (12) addition -> . operable PLUS operable
    (13) addition -> . operable PLUS addition
    (14) subtraction -> . operable MINUS operable
    (15) subtraction -> . operable MINUS subtraction
    (16) multiplication -> . operable MULT operable
    (17) multiplication -> . operable MULT multiplication
    (18) division -> . operable DIV operable
    (19) division -> . operable DIV division
    (20) operable -> . INTEGER
    (21) operable -> . CLFLOAT
    (22) operable -> . TEXT

    $end            reduce using rule 1 (program -> expressions .)
    INTEGER         shift and go to state 12
    CLFLOAT         shift and go to state 10
    TEXT            shift and go to state 4

    operable                       shift and go to state 2
    expression                     shift and go to state 24
    subtraction                    shift and go to state 3
    division                       shift and go to state 7
    multiplication                 shift and go to state 9
    operation                      shift and go to state 18
    addition                       shift and go to state 11

state 15

    (2) program -> declaration .

    $end            reduce using rule 2 (program -> declaration .)


state 16

    (3) program -> print .

    $end            reduce using rule 3 (program -> print .)


state 17

    (24) let -> LET . TEXT EQUALS INTEGER
    (25) let -> LET . TEXT EQUALS string

    TEXT            shift and go to state 25


state 18

    (7) expression -> operation .

    RPAREN          reduce using rule 7 (expression -> operation .)
    INTEGER         reduce using rule 7 (expression -> operation .)
    CLFLOAT         reduce using rule 7 (expression -> operation .)
    TEXT            reduce using rule 7 (expression -> operation .)
    $end            reduce using rule 7 (expression -> operation .)
    CLSTRING        reduce using rule 7 (expression -> operation .)


state 19

    (28) print -> PRINT LPAREN . TEXT RPAREN
    (29) print -> PRINT LPAREN . string RPAREN
    (30) print -> PRINT LPAREN . expressions RPAREN
    (26) string -> . CLSTRING
    (27) string -> . string expression string
    (5) expressions -> . expression
    (6) expressions -> . expressions expression
    (7) expression -> . operation
    (8) operation -> . addition
    (9) operation -> . subtraction
    (10) operation -> . multiplication
    (11) operation -> . division
    (12) addition -> . operable PLUS operable
    (13) addition -> . operable PLUS addition
    (14) subtraction -> . operable MINUS operable
    (15) subtraction -> . operable MINUS subtraction
    (16) multiplication -> . operable MULT operable
    (17) multiplication -> . operable MULT multiplication
    (18) division -> . operable DIV operable
    (19) division -> . operable DIV division
    (20) operable -> . INTEGER
    (21) operable -> . CLFLOAT
    (22) operable -> . TEXT

    TEXT            shift and go to state 27
    CLSTRING        shift and go to state 28
    INTEGER         shift and go to state 12
    CLFLOAT         shift and go to state 10

    operable                       shift and go to state 2
    expression                     shift and go to state 13
    string                         shift and go to state 26
    subtraction                    shift and go to state 3
    expressions                    shift and go to state 29
    division                       shift and go to state 7
    multiplication                 shift and go to state 9
    operation                      shift and go to state 18
    addition                       shift and go to state 11

state 20

    (14) subtraction -> operable MINUS . operable
    (15) subtraction -> operable MINUS . subtraction
    (20) operable -> . INTEGER
    (21) operable -> . CLFLOAT
    (22) operable -> . TEXT
    (14) subtraction -> . operable MINUS operable
    (15) subtraction -> . operable MINUS subtraction

    INTEGER         shift and go to state 12
    CLFLOAT         shift and go to state 10
    TEXT            shift and go to state 4

    operable                       shift and go to state 30
    subtraction                    shift and go to state 31

state 21

    (18) division -> operable DIV . operable
    (19) division -> operable DIV . division
    (20) operable -> . INTEGER
    (21) operable -> . CLFLOAT
    (22) operable -> . TEXT
    (18) division -> . operable DIV operable
    (19) division -> . operable DIV division

    INTEGER         shift and go to state 12
    CLFLOAT         shift and go to state 10
    TEXT            shift and go to state 4

    operable                       shift and go to state 32
    division                       shift and go to state 33

state 22

    (16) multiplication -> operable MULT . operable
    (17) multiplication -> operable MULT . multiplication
    (20) operable -> . INTEGER
    (21) operable -> . CLFLOAT
    (22) operable -> . TEXT
    (16) multiplication -> . operable MULT operable
    (17) multiplication -> . operable MULT multiplication

    INTEGER         shift and go to state 12
    CLFLOAT         shift and go to state 10
    TEXT            shift and go to state 4

    operable                       shift and go to state 34
    multiplication                 shift and go to state 35

state 23

    (12) addition -> operable PLUS . operable
    (13) addition -> operable PLUS . addition
    (20) operable -> . INTEGER
    (21) operable -> . CLFLOAT
    (22) operable -> . TEXT
    (12) addition -> . operable PLUS operable
    (13) addition -> . operable PLUS addition

    INTEGER         shift and go to state 12
    CLFLOAT         shift and go to state 10
    TEXT            shift and go to state 4

    operable                       shift and go to state 36
    addition                       shift and go to state 37

state 24

    (6) expressions -> expressions expression .

    RPAREN          reduce using rule 6 (expressions -> expressions expression .)
    INTEGER         reduce using rule 6 (expressions -> expressions expression .)
    CLFLOAT         reduce using rule 6 (expressions -> expressions expression .)
    TEXT            reduce using rule 6 (expressions -> expressions expression .)
    $end            reduce using rule 6 (expressions -> expressions expression .)


state 25

    (24) let -> LET TEXT . EQUALS INTEGER
    (25) let -> LET TEXT . EQUALS string

    EQUALS          shift and go to state 38


state 26

    (29) print -> PRINT LPAREN string . RPAREN
    (27) string -> string . expression string
    (7) expression -> . operation
    (8) operation -> . addition
    (9) operation -> . subtraction
    (10) operation -> . multiplication
    (11) operation -> . division
    (12) addition -> . operable PLUS operable
    (13) addition -> . operable PLUS addition
    (14) subtraction -> . operable MINUS operable
    (15) subtraction -> . operable MINUS subtraction
    (16) multiplication -> . operable MULT operable
    (17) multiplication -> . operable MULT multiplication
    (18) division -> . operable DIV operable
    (19) division -> . operable DIV division
    (20) operable -> . INTEGER
    (21) operable -> . CLFLOAT
    (22) operable -> . TEXT

    RPAREN          shift and go to state 40
    INTEGER         shift and go to state 12
    CLFLOAT         shift and go to state 10
    TEXT            shift and go to state 4

    operable                       shift and go to state 2
    expression                     shift and go to state 39
    subtraction                    shift and go to state 3
    division                       shift and go to state 7
    multiplication                 shift and go to state 9
    operation                      shift and go to state 18
    addition                       shift and go to state 11

state 27

    (28) print -> PRINT LPAREN TEXT . RPAREN
    (22) operable -> TEXT .

    RPAREN          shift and go to state 41
    PLUS            reduce using rule 22 (operable -> TEXT .)
    MINUS           reduce using rule 22 (operable -> TEXT .)
    MULT            reduce using rule 22 (operable -> TEXT .)
    DIV             reduce using rule 22 (operable -> TEXT .)


state 28

    (26) string -> CLSTRING .

    INTEGER         reduce using rule 26 (string -> CLSTRING .)
    CLFLOAT         reduce using rule 26 (string -> CLSTRING .)
    TEXT            reduce using rule 26 (string -> CLSTRING .)
    RPAREN          reduce using rule 26 (string -> CLSTRING .)
    $end            reduce using rule 26 (string -> CLSTRING .)


state 29

    (30) print -> PRINT LPAREN expressions . RPAREN
    (6) expressions -> expressions . expression
    (7) expression -> . operation
    (8) operation -> . addition
    (9) operation -> . subtraction
    (10) operation -> . multiplication
    (11) operation -> . division
    (12) addition -> . operable PLUS operable
    (13) addition -> . operable PLUS addition
    (14) subtraction -> . operable MINUS operable
    (15) subtraction -> . operable MINUS subtraction
    (16) multiplication -> . operable MULT operable
    (17) multiplication -> . operable MULT multiplication
    (18) division -> . operable DIV operable
    (19) division -> . operable DIV division
    (20) operable -> . INTEGER
    (21) operable -> . CLFLOAT
    (22) operable -> . TEXT

    RPAREN          shift and go to state 42
    INTEGER         shift and go to state 12
    CLFLOAT         shift and go to state 10
    TEXT            shift and go to state 4

    operable                       shift and go to state 2
    expression                     shift and go to state 24
    subtraction                    shift and go to state 3
    division                       shift and go to state 7
    multiplication                 shift and go to state 9
    operation                      shift and go to state 18
    addition                       shift and go to state 11

state 30

    (14) subtraction -> operable MINUS operable .
    (14) subtraction -> operable . MINUS operable
    (15) subtraction -> operable . MINUS subtraction

    RPAREN          reduce using rule 14 (subtraction -> operable MINUS operable .)
    INTEGER         reduce using rule 14 (subtraction -> operable MINUS operable .)
    CLFLOAT         reduce using rule 14 (subtraction -> operable MINUS operable .)
    TEXT            reduce using rule 14 (subtraction -> operable MINUS operable .)
    CLSTRING        reduce using rule 14 (subtraction -> operable MINUS operable .)
    $end            reduce using rule 14 (subtraction -> operable MINUS operable .)
    MINUS           shift and go to state 20


state 31

    (15) subtraction -> operable MINUS subtraction .

    RPAREN          reduce using rule 15 (subtraction -> operable MINUS subtraction .)
    INTEGER         reduce using rule 15 (subtraction -> operable MINUS subtraction .)
    CLFLOAT         reduce using rule 15 (subtraction -> operable MINUS subtraction .)
    TEXT            reduce using rule 15 (subtraction -> operable MINUS subtraction .)
    CLSTRING        reduce using rule 15 (subtraction -> operable MINUS subtraction .)
    $end            reduce using rule 15 (subtraction -> operable MINUS subtraction .)


state 32

    (18) division -> operable DIV operable .
    (18) division -> operable . DIV operable
    (19) division -> operable . DIV division

    RPAREN          reduce using rule 18 (division -> operable DIV operable .)
    INTEGER         reduce using rule 18 (division -> operable DIV operable .)
    CLFLOAT         reduce using rule 18 (division -> operable DIV operable .)
    TEXT            reduce using rule 18 (division -> operable DIV operable .)
    $end            reduce using rule 18 (division -> operable DIV operable .)
    CLSTRING        reduce using rule 18 (division -> operable DIV operable .)
    DIV             shift and go to state 21


state 33

    (19) division -> operable DIV division .

    RPAREN          reduce using rule 19 (division -> operable DIV division .)
    INTEGER         reduce using rule 19 (division -> operable DIV division .)
    CLFLOAT         reduce using rule 19 (division -> operable DIV division .)
    TEXT            reduce using rule 19 (division -> operable DIV division .)
    $end            reduce using rule 19 (division -> operable DIV division .)
    CLSTRING        reduce using rule 19 (division -> operable DIV division .)


state 34

    (16) multiplication -> operable MULT operable .
    (16) multiplication -> operable . MULT operable
    (17) multiplication -> operable . MULT multiplication

    RPAREN          reduce using rule 16 (multiplication -> operable MULT operable .)
    INTEGER         reduce using rule 16 (multiplication -> operable MULT operable .)
    CLFLOAT         reduce using rule 16 (multiplication -> operable MULT operable .)
    TEXT            reduce using rule 16 (multiplication -> operable MULT operable .)
    CLSTRING        reduce using rule 16 (multiplication -> operable MULT operable .)
    $end            reduce using rule 16 (multiplication -> operable MULT operable .)
    MULT            shift and go to state 22


state 35

    (17) multiplication -> operable MULT multiplication .

    RPAREN          reduce using rule 17 (multiplication -> operable MULT multiplication .)
    INTEGER         reduce using rule 17 (multiplication -> operable MULT multiplication .)
    CLFLOAT         reduce using rule 17 (multiplication -> operable MULT multiplication .)
    TEXT            reduce using rule 17 (multiplication -> operable MULT multiplication .)
    CLSTRING        reduce using rule 17 (multiplication -> operable MULT multiplication .)
    $end            reduce using rule 17 (multiplication -> operable MULT multiplication .)


state 36

    (12) addition -> operable PLUS operable .
    (12) addition -> operable . PLUS operable
    (13) addition -> operable . PLUS addition

    CLSTRING        reduce using rule 12 (addition -> operable PLUS operable .)
    RPAREN          reduce using rule 12 (addition -> operable PLUS operable .)
    INTEGER         reduce using rule 12 (addition -> operable PLUS operable .)
    CLFLOAT         reduce using rule 12 (addition -> operable PLUS operable .)
    TEXT            reduce using rule 12 (addition -> operable PLUS operable .)
    $end            reduce using rule 12 (addition -> operable PLUS operable .)
    PLUS            shift and go to state 23


state 37

    (13) addition -> operable PLUS addition .

    CLSTRING        reduce using rule 13 (addition -> operable PLUS addition .)
    RPAREN          reduce using rule 13 (addition -> operable PLUS addition .)
    INTEGER         reduce using rule 13 (addition -> operable PLUS addition .)
    CLFLOAT         reduce using rule 13 (addition -> operable PLUS addition .)
    TEXT            reduce using rule 13 (addition -> operable PLUS addition .)
    $end            reduce using rule 13 (addition -> operable PLUS addition .)


state 38

    (24) let -> LET TEXT EQUALS . INTEGER
    (25) let -> LET TEXT EQUALS . string
    (26) string -> . CLSTRING
    (27) string -> . string expression string

    INTEGER         shift and go to state 44
    CLSTRING        shift and go to state 28

    string                         shift and go to state 43

state 39

    (27) string -> string expression . string
    (26) string -> . CLSTRING
    (27) string -> . string expression string

    CLSTRING        shift and go to state 28

    string                         shift and go to state 45

state 40

    (29) print -> PRINT LPAREN string RPAREN .

    $end            reduce using rule 29 (print -> PRINT LPAREN string RPAREN .)


state 41

    (28) print -> PRINT LPAREN TEXT RPAREN .

    $end            reduce using rule 28 (print -> PRINT LPAREN TEXT RPAREN .)


state 42

    (30) print -> PRINT LPAREN expressions RPAREN .

    $end            reduce using rule 30 (print -> PRINT LPAREN expressions RPAREN .)


state 43

    (25) let -> LET TEXT EQUALS string .
    (27) string -> string . expression string
    (7) expression -> . operation
    (8) operation -> . addition
    (9) operation -> . subtraction
    (10) operation -> . multiplication
    (11) operation -> . division
    (12) addition -> . operable PLUS operable
    (13) addition -> . operable PLUS addition
    (14) subtraction -> . operable MINUS operable
    (15) subtraction -> . operable MINUS subtraction
    (16) multiplication -> . operable MULT operable
    (17) multiplication -> . operable MULT multiplication
    (18) division -> . operable DIV operable
    (19) division -> . operable DIV division
    (20) operable -> . INTEGER
    (21) operable -> . CLFLOAT
    (22) operable -> . TEXT

    $end            reduce using rule 25 (let -> LET TEXT EQUALS string .)
    INTEGER         shift and go to state 12
    CLFLOAT         shift and go to state 10
    TEXT            shift and go to state 4

    operable                       shift and go to state 2
    expression                     shift and go to state 39
    subtraction                    shift and go to state 3
    division                       shift and go to state 7
    multiplication                 shift and go to state 9
    operation                      shift and go to state 18
    addition                       shift and go to state 11

state 44

    (24) let -> LET TEXT EQUALS INTEGER .

    $end            reduce using rule 24 (let -> LET TEXT EQUALS INTEGER .)


state 45

    (27) string -> string expression string .
    (27) string -> string . expression string
    (7) expression -> . operation
    (8) operation -> . addition
    (9) operation -> . subtraction
    (10) operation -> . multiplication
    (11) operation -> . division
    (12) addition -> . operable PLUS operable
    (13) addition -> . operable PLUS addition
    (14) subtraction -> . operable MINUS operable
    (15) subtraction -> . operable MINUS subtraction
    (16) multiplication -> . operable MULT operable
    (17) multiplication -> . operable MULT multiplication
    (18) division -> . operable DIV operable
    (19) division -> . operable DIV division
    (20) operable -> . INTEGER
    (21) operable -> . CLFLOAT
    (22) operable -> . TEXT

  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for CLFLOAT resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
    RPAREN          reduce using rule 27 (string -> string expression string .)
    $end            reduce using rule 27 (string -> string expression string .)
    INTEGER         shift and go to state 12
    CLFLOAT         shift and go to state 10
    TEXT            shift and go to state 4

  ! INTEGER         [ reduce using rule 27 (string -> string expression string .) ]
  ! CLFLOAT         [ reduce using rule 27 (string -> string expression string .) ]
  ! TEXT            [ reduce using rule 27 (string -> string expression string .) ]

    operable                       shift and go to state 2
    expression                     shift and go to state 39
    subtraction                    shift and go to state 3
    division                       shift and go to state 7
    multiplication                 shift and go to state 9
    operation                      shift and go to state 18
    addition                       shift and go to state 11
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INTEGER in state 45 resolved as shift
WARNING: shift/reduce conflict for CLFLOAT in state 45 resolved as shift
WARNING: shift/reduce conflict for TEXT in state 45 resolved as shift
